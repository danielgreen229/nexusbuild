{"file":"profile-jfHiOu1f.js","mappings":"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","names":["_ssrRenderAttrs","_mergeProps","_unref","_ssrInterpolate","_ssrRenderAttr","_ssrRenderList","_ssrIncludeBooleanAttr","_ssrLooseContain"],"sources":["../../../../components/profile/ProfileInfo.vue","../../../../components/profile/ProfileOrders.vue","../../../../components/profile/ProfileBalance.vue","../../../../components/profile/ProfileSettings.vue","../../../../pages/profile.vue"],"sourcesContent":["<script setup>\nimport { useUserStore } from '~/stores/user'\nimport { API } from '~/config'\n\nconst userStore = useUserStore()\nconst user = ref({\n  name: 'Иван Иванов',\n  email: 'ivan@example.com',\n  phone: '+7 (999) 123-45-67',\n  telegram: '@ivanov'\n})\n\nconst isEditing = ref(false)\nconst tempUser = ref({...user.value})\nconst loading = ref(false)\n\n// Загружаем профиль при монтировании компонента\nonMounted(async () => {\n  await loadProfile()\n})\n\nconst loadProfile = async () => {\n  try {\n    loading.value = true\n    const response = await fetch(`${API.fullUrl}/user/profile`, {\n      headers: {\n        'Authorization': `Bearer ${userStore.token}`\n      }\n    })\n    \n    if (response.ok) {\n      const data = await response.json()\n      if (data.success) {\n        user.value = data.data\n        tempUser.value = {...data.data}\n      }\n    }\n  } catch (error) {\n    console.error('Ошибка загрузки профиля:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst saveProfile = async () => {\n  try {\n    loading.value = true\n    const response = await fetch(`${API.fullUrl}/user/profile`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userStore.token}`\n      },\n      body: JSON.stringify(tempUser.value)\n    })\n    \n    if (response.ok) {\n      const data = await response.json()\n      if (data.success) {\n        user.value = {...data.data}\n        isEditing.value = false\n        // Обновляем данные в store\n        userStore.user = data.data\n      }\n    } else {\n      const errorData = await response.json()\n      alert(errorData.error || 'Ошибка обновления профиля')\n    }\n  } catch (error) {\n    console.error('Ошибка сохранения профиля:', error)\n    alert('Ошибка сохранения профиля')\n  } finally {\n    loading.value = false\n  }\n}\n</script>\n\n<template>\n  <div class=\"profile-info\">\n    <div class=\"profile-info__header\">\n      <h2 class=\"profile-info__title\">Личные данные</h2>\n      <button \n        v-if=\"!isEditing\"\n        class=\"button button--outline\"\n        @click=\"isEditing = true\"\n      >\n        Редактировать\n      </button>\n      <div v-else class=\"profile-info__actions\">\n        <button \n          class=\"button button--outline\"\n          @click=\"isEditing = false\"\n        >\n          Отмена\n        </button>\n        <button \n          class=\"button button--primary\"\n          :disabled=\"loading\"\n          @click=\"saveProfile\"\n        >\n          {{ loading ? 'Сохранение...' : 'Сохранить' }}\n        </button>\n      </div>\n    </div>\n    \n    <div v-if=\"!isEditing\" class=\"profile-info__content\">\n      <div class=\"profile-info__item\">\n        <span class=\"profile-info__label\">Имя:</span>\n        <span class=\"profile-info__value\">{{ user.name }}</span>\n      </div>\n      <div class=\"profile-info__item\">\n        <span class=\"profile-info__label\">Email:</span>\n        <span class=\"profile-info__value\">{{ user.email }}</span>\n      </div>\n      <div class=\"profile-info__item\">\n        <span class=\"profile-info__label\">Телефон:</span>\n        <span class=\"profile-info__value\">{{ user.phone }}</span>\n      </div>\n      <div class=\"profile-info__item\">\n        <span class=\"profile-info__label\">Telegram:</span>\n        <span class=\"profile-info__value\">{{ user.telegram }}</span>\n      </div>\n    </div>\n    \n    <form v-else class=\"profile-info__form\">\n      <div class=\"profile-info__form-group\">\n        <label class=\"profile-info__form-label\">Имя</label>\n        <input \n          v-model=\"tempUser.name\"\n          type=\"text\" \n          class=\"profile-info__form-input\"\n        >\n      </div>\n      <div class=\"profile-info__form-group\">\n        <label class=\"profile-info__form-label\">Email</label>\n        <input \n          v-model=\"tempUser.email\"\n          type=\"email\" \n          class=\"profile-info__form-input\"\n        >\n      </div>\n      <div class=\"profile-info__form-group\">\n        <label class=\"profile-info__form-label\">Телефон</label>\n        <input \n          v-model=\"tempUser.phone\"\n          type=\"tel\" \n          class=\"profile-info__form-input\"\n        >\n      </div>\n      <div class=\"profile-info__form-group\">\n        <label class=\"profile-info__form-label\">Telegram</label>\n        <input \n          v-model=\"tempUser.telegram\"\n          type=\"text\" \n          class=\"profile-info__form-input\"\n        >\n      </div>\n    </form>\n  </div>\n</template>\n\n<style scoped>\n.profile-info__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.profile-info__title {\n  font-size: 1.8rem;\n  color: var(--dark);\n}\n\n.profile-info__actions {\n  display: flex;\n  gap: 10px;\n}\n\n.profile-info__item {\n  display: flex;\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #f1f5f9;\n}\n\n.profile-info__label {\n  width: 150px;\n  font-weight: 600;\n  color: var(--dark);\n}\n\n.profile-info__value {\n  flex: 1;\n  color: var(--gray);\n}\n\n.profile-info__form-group {\n  margin-bottom: 20px;\n}\n\n.profile-info__form-label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n  color: var(--dark);\n}\n\n.profile-info__form-input {\n  width: 100%;\n  padding: 12px 15px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  font-size: 1rem;\n}\n</style>","<script setup>\nimport { useUserStore } from '~/stores/user'\n\nconst userStore = useUserStore()\nconst orders = ref([])\nconst loading = ref(false)\n\n// Загружаем заказы при монтировании компонента\nonMounted(async () => {\n  await loadOrders()\n})\n\nconst loadOrders = async () => {\n  try {\n    loading.value = true\n    const response = await fetch(`${API.fullUrl}/user/orders`, {\n      headers: {\n        'Authorization': `Bearer ${userStore.token}`\n      }\n    })\n    \n    if (response.ok) {\n      const data = await response.json()\n      if (data.success) {\n        orders.value = data.data.map(order => ({\n          id: order.id,\n          date: new Date(order.createdAt).toLocaleDateString('ru-RU'),\n          template: order.templateName,\n          status: order.statusText,\n          price: `${order.price.toLocaleString()} ₽`,\n          statusCode: order.status\n        }))\n      }\n    }\n  } catch (error) {\n    console.error('Ошибка загрузки заказов:', error)\n  } finally {\n    loading.value = false\n  }\n}\n</script>\n\n<template>\n  <div class=\"profile-orders\">\n    <h2 class=\"profile-orders__title\">Мои заказы</h2>\n    \n    <div v-if=\"loading\" class=\"profile-orders__loading\">\n      Загрузка заказов...\n    </div>\n    \n    <div v-else-if=\"orders.length === 0\" class=\"profile-orders__empty\">\n      У вас пока нет заказов\n    </div>\n    \n    <div v-else class=\"profile-orders__table\">\n      <div class=\"profile-orders__row profile-orders__row--header\">\n        <div class=\"profile-orders__cell\">ID заказа</div>\n        <div class=\"profile-orders__cell\">Дата</div>\n        <div class=\"profile-orders__cell\">Шаблон</div>\n        <div class=\"profile-orders__cell\">Статус</div>\n        <div class=\"profile-orders__cell\">Сумма</div>\n        <div class=\"profile-orders__cell\">Действия</div>\n      </div>\n      \n      <div \n        v-for=\"order in orders\"\n        :key=\"order.id\"\n        class=\"profile-orders__row\"\n      >\n        <div class=\"profile-orders__cell\">{{ order.id }}</div>\n        <div class=\"profile-orders__cell\">{{ order.date }}</div>\n        <div class=\"profile-orders__cell\">{{ order.template }}</div>\n        <div class=\"profile-orders__cell\">\n          <span :class=\"[\n            'profile-orders__status',\n            `profile-orders__status--${order.statusCode}`\n          ]\">\n            {{ order.status }}\n          </span>\n        </div>\n        <div class=\"profile-orders__cell\">{{ order.price }}</div>\n        <div class=\"profile-orders__cell\">\n          <button class=\"profile-orders__action\">\n            Подробнее\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.profile-orders__title {\n  font-size: 1.8rem;\n  margin-bottom: 25px;\n  color: var(--dark);\n}\n\n.profile-orders__table {\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.profile-orders__row {\n  display: grid;\n  grid-template-columns: 1fr 1fr 2fr 1fr 1fr 1fr;\n  align-items: center;\n}\n\n.profile-orders__row--header {\n  background: #f8fafc;\n  font-weight: 600;\n  color: var(--dark);\n}\n\n.profile-orders__row:not(.profile-orders__row--header) {\n  border-top: 1px solid #e2e8f0;\n}\n\n.profile-orders__cell {\n  padding: 15px;\n}\n\n.profile-orders__status {\n  display: inline-block;\n  padding: 5px 12px;\n  border-radius: 20px;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.profile-orders__status--completed {\n  background: #dcfce7;\n  color: #166534;\n}\n\n.profile-orders__status--in_progress {\n  background: #fffbeb;\n  color: #854d0e;\n}\n\n.profile-orders__status--pending_payment {\n  background: #fee2e2;\n  color: #b91c1c;\n}\n\n.profile-orders__loading,\n.profile-orders__empty {\n  text-align: center;\n  padding: 40px;\n  color: var(--gray);\n  font-size: 1.1rem;\n}\n\n.profile-orders__action {\n  background: none;\n  border: none;\n  color: var(--primary);\n  cursor: pointer;\n  font-weight: 500;\n}\n\n@media (max-width: 1200px) {\n  .profile-orders__row {\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: auto auto;\n    gap: 10px;\n  }\n  \n  .profile-orders__cell:nth-child(1),\n  .profile-orders__cell:nth-child(2),\n  .profile-orders__cell:nth-child(4) {\n    grid-row: 1;\n  }\n  \n  .profile-orders__cell:nth-child(3),\n  .profile-orders__cell:nth-child(5),\n  .profile-orders__cell:nth-child(6) {\n    grid-row: 2;\n  }\n  \n  .profile-orders__cell:nth-child(3) {\n    grid-column: span 2;\n  }\n}\n</style>","<script setup>\nimport { useUserStore } from '~/stores/user'\n\nconst userStore = useUserStore()\nconst balance = ref(0)\nconst transactions = ref([])\nconst loading = ref(false)\n\n// Загружаем данные при монтировании компонента\nonMounted(async () => {\n  await loadBalance()\n  await loadTransactions()\n})\n\nconst loadBalance = async () => {\n  try {\n    const response = await fetch(`${API.fullUrl}/user/profile`, {\n      headers: {\n        'Authorization': `Bearer ${userStore.token}`\n      }\n    })\n    \n    if (response.ok) {\n      const data = await response.json()\n      if (data.success) {\n        balance.value = data.data.balance || 0\n      }\n    }\n  } catch (error) {\n    console.error('Ошибка загрузки баланса:', error)\n  }\n}\n\nconst loadTransactions = async () => {\n  try {\n    loading.value = true\n    const response = await fetch(`${API.fullUrl}/user/transactions`, {\n      headers: {\n        'Authorization': `Bearer ${userStore.token}`\n      }\n    })\n    \n    if (response.ok) {\n      const data = await response.json()\n      if (data.success) {\n        transactions.value = data.data.map(trx => ({\n          id: trx.id,\n          date: new Date(trx.createdAt).toLocaleDateString('ru-RU'),\n          description: trx.description,\n          amount: `${trx.amount > 0 ? '+' : ''}${trx.amount.toLocaleString()} ₽`,\n          type: trx.type\n        }))\n      }\n    }\n  } catch (error) {\n    console.error('Ошибка загрузки транзакций:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst topupBalance = async () => {\n  const amount = prompt('Введите сумму для пополнения:')\n  if (!amount || isNaN(amount) || amount <= 0) {\n    alert('Введите корректную сумму')\n    return\n  }\n\n  try {\n    loading.value = true\n    const response = await fetch(`${API.fullUrl}/user/balance/topup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userStore.token}`\n      },\n      body: JSON.stringify({ amount: parseInt(amount) })\n    })\n    \n    if (response.ok) {\n      const data = await response.json()\n      if (data.success) {\n        alert('Баланс успешно пополнен!')\n        await loadBalance()\n        await loadTransactions()\n      }\n    } else {\n      const errorData = await response.json()\n      alert(errorData.error || 'Ошибка пополнения баланса')\n    }\n  } catch (error) {\n    console.error('Ошибка пополнения баланса:', error)\n    alert('Ошибка пополнения баланса')\n  } finally {\n    loading.value = false\n  }\n}\n</script>\n\n<template>\n  <div class=\"profile-balance\">\n    <div class=\"profile-balance__header\">\n      <h2 class=\"profile-balance__title\">Баланс</h2>\n      <div class=\"profile-balance__amount\">\n        {{ balance.toLocaleString() }} ₽\n      </div>\n    </div>\n    \n    <button \n      class=\"button button--primary profile-balance__button\"\n      :disabled=\"loading\"\n      @click=\"topupBalance\"\n    >\n      {{ loading ? 'Пополнение...' : 'Пополнить баланс' }}\n    </button>\n    \n    <div class=\"profile-balance__history\">\n      <h3 class=\"profile-balance__subtitle\">История операций</h3>\n      \n      <div v-if=\"loading\" class=\"profile-balance__loading\">\n        Загрузка операций...\n      </div>\n      \n      <div v-else-if=\"transactions.length === 0\" class=\"profile-balance__empty\">\n        У вас пока нет операций\n      </div>\n      \n      <div v-else class=\"profile-balance__list\">\n        <div \n          v-for=\"trx in transactions\"\n          :key=\"trx.id\"\n          class=\"profile-balance__item\"\n        >\n          <div class=\"profile-balance__info\">\n            <div class=\"profile-balance__date\">{{ trx.date }}</div>\n            <div class=\"profile-balance__desc\">{{ trx.description }}</div>\n          </div>\n          <div \n            :class=\"[\n              'profile-balance__sum',\n              trx.type === 'income' ? 'profile-balance__sum--income' : 'profile-balance__sum--expense'\n            ]\"\n          >\n            {{ trx.amount }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.profile-balance__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.profile-balance__title {\n  font-size: 1.8rem;\n  color: var(--dark);\n}\n\n.profile-balance__amount {\n  font-size: 2rem;\n  font-weight: 700;\n  color: var(--primary);\n}\n\n.profile-balance__button {\n  padding: 12px 30px;\n  margin-bottom: 40px;\n}\n\n.profile-balance__subtitle {\n  font-size: 1.4rem;\n  margin-bottom: 20px;\n  color: var(--dark);\n}\n\n.profile-balance__item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 0;\n  border-bottom: 1px solid #f1f5f9;\n}\n\n.profile-balance__info {\n  flex: 1;\n}\n\n.profile-balance__date {\n  font-size: 0.9rem;\n  color: var(--gray);\n  margin-bottom: 5px;\n}\n\n.profile-balance__desc {\n  font-weight: 500;\n}\n\n.profile-balance__sum {\n  font-weight: 600;\n}\n\n.profile-balance__sum--income {\n  color: #10b981;\n}\n\n.profile-balance__sum--expense {\n  color: #ef4444;\n}\n\n.profile-balance__loading,\n.profile-balance__empty {\n  text-align: center;\n  padding: 20px;\n  color: var(--gray);\n  font-size: 1rem;\n}\n</style>","<script setup>\nconst notifications = ref({\n  email: true,\n  telegram: true,\n  sms: false\n})\n\nconst security = ref({\n  twoFactor: false\n})\n</script>\n\n<template>\n  <div class=\"profile-settings\">\n    <h2 class=\"profile-settings__title\">Настройки</h2>\n    \n    <div class=\"profile-settings__section\">\n      <h3 class=\"profile-settings__subtitle\">Уведомления</h3>\n      \n      <div class=\"profile-settings__option\">\n        <div class=\"profile-settings__option-info\">\n          <div class=\"profile-settings__option-title\">Email уведомления</div>\n          <div class=\"profile-settings__option-desc\">Получать новости и обновления на почту</div>\n        </div>\n        <label class=\"profile-settings__switch\">\n          <input \n            type=\"checkbox\" \n            v-model=\"notifications.email\"\n            class=\"profile-settings__switch-input\"\n          >\n          <span class=\"profile-settings__switch-slider\"></span>\n        </label>\n      </div>\n      \n      <div class=\"profile-settings__option\">\n        <div class=\"profile-settings__option-info\">\n          <div class=\"profile-settings__option-title\">Telegram уведомления</div>\n          <div class=\"profile-settings__option-desc\">Получать важные уведомления в Telegram</div>\n        </div>\n        <label class=\"profile-settings__switch\">\n          <input \n            type=\"checkbox\" \n            v-model=\"notifications.telegram\"\n            class=\"profile-settings__switch-input\"\n          >\n          <span class=\"profile-settings__switch-slider\"></span>\n        </label>\n      </div>\n      \n      <div class=\"profile-settings__option\">\n        <div class=\"profile-settings__option-info\">\n          <div class=\"profile-settings__option-title\">SMS уведомления</div>\n          <div class=\"profile-settings__option-desc\">Получать важные уведомления по SMS</div>\n        </div>\n        <label class=\"profile-settings__switch\">\n          <input \n            type=\"checkbox\" \n            v-model=\"notifications.sms\"\n            class=\"profile-settings__switch-input\"\n          >\n          <span class=\"profile-settings__switch-slider\"></span>\n        </label>\n      </div>\n    </div>\n    \n    <div class=\"profile-settings__section\">\n      <h3 class=\"profile-settings__subtitle\">Безопасность</h3>\n      \n      <div class=\"profile-settings__option\">\n        <div class=\"profile-settings__option-info\">\n          <div class=\"profile-settings__option-title\">Двухфакторная аутентификация</div>\n          <div class=\"profile-settings__option-desc\">Дополнительная защита вашего аккаунта</div>\n        </div>\n        <label class=\"profile-settings__switch\">\n          <input \n            type=\"checkbox\" \n            v-model=\"security.twoFactor\"\n            class=\"profile-settings__switch-input\"\n          >\n          <span class=\"profile-settings__switch-slider\"></span>\n        </label>\n      </div>\n    </div>\n    \n    <div class=\"profile-settings__section\">\n      <h3 class=\"profile-settings__subtitle\">Удаление аккаунта</h3>\n      <button class=\"button button--danger\">\n        Удалить аккаунт\n      </button>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.profile-settings__title {\n  font-size: 1.8rem;\n  margin-bottom: 30px;\n  color: var(--dark);\n}\n\n.profile-settings__section {\n  margin-bottom: 40px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid #f1f5f9;\n}\n\n.profile-settings__subtitle {\n  font-size: 1.4rem;\n  margin-bottom: 20px;\n  color: var(--dark);\n}\n\n.profile-settings__option {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 0;\n}\n\n.profile-settings__option-info {\n  flex: 1;\n  margin-right: 20px;\n}\n\n.profile-settings__option-title {\n  font-weight: 600;\n  margin-bottom: 5px;\n}\n\n.profile-settings__option-desc {\n  font-size: 0.9rem;\n  color: var(--gray);\n}\n\n.profile-settings__switch {\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 26px;\n}\n\n.profile-settings__switch-input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.profile-settings__switch-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #cbd5e1;\n  transition: .4s;\n  border-radius: 34px;\n}\n\n.profile-settings__switch-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 18px;\n  width: 18px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\n\n.profile-settings__switch-input:checked + .profile-settings__switch-slider {\n  background-color: var(--primary);\n}\n\n.profile-settings__switch-input:checked + .profile-settings__switch-slider:before {\n  transform: translateX(24px);\n}\n\n.button--danger {\n  background: #fef2f2;\n  color: #ef4444;\n  border: 1px solid #fecaca;\n}\n\n.button--danger:hover {\n  background: #fee2e2;\n}\n</style>","<script setup>\nimport ProfileInfo from '@/components/profile/ProfileInfo.vue'\nimport ProfileOrders from '@/components/profile/ProfileOrders.vue'\nimport ProfileBalance from '@/components/profile/ProfileBalance.vue'\nimport ProfileSettings from '@/components/profile/ProfileSettings.vue'\n\nconst activeTab = ref('info')\nconst tabs = [\n  { id: 'info', title: 'Профиль' },\n  { id: 'orders', title: 'Мои заказы' },\n  { id: 'balance', title: 'Баланс' },\n  { id: 'settings', title: 'Настройки' }\n]\n</script>\n\n<template>\n  <div class=\"profile\">\n    <div class=\"profile__header\">\n      <h1 class=\"profile__title\">Личный кабинет</h1>\n      <p class=\"profile__subtitle\">Управляйте своими заказами и настройками</p>\n    </div>\n    \n    <div class=\"profile__tabs\">\n      <button\n        v-for=\"tab in tabs\"\n        :key=\"tab.id\"\n        :class=\"['profile__tab', { 'profile__tab--active': activeTab === tab.id }]\"\n        @click=\"activeTab = tab.id\"\n      >\n        {{ tab.title }}\n      </button>\n    </div>\n    \n    <div class=\"profile__content\">\n      <ProfileInfo v-if=\"activeTab === 'info'\" />\n      <ProfileOrders v-else-if=\"activeTab === 'orders'\" />\n      <ProfileBalance v-else-if=\"activeTab === 'balance'\" />\n      <ProfileSettings v-else />\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.profile {\n  padding: 40px 0 80px;\n}\n\n.profile__header {\n  text-align: center;\n  margin-bottom: 40px;\n}\n\n.profile__title {\n  font-size: 2.5rem;\n  margin-bottom: 10px;\n  color: var(--dark);\n}\n\n.profile__subtitle {\n  font-size: 1.2rem;\n  color: var(--gray);\n}\n\n.profile__tabs {\n  display: flex;\n  border-bottom: 1px solid #e2e8f0;\n  margin-bottom: 30px;\n  overflow-x: auto;\n}\n\n.profile__tab {\n  padding: 15px 25px;\n  background: transparent;\n  border: none;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--gray);\n  cursor: pointer;\n  position: relative;\n  white-space: nowrap;\n}\n\n.profile__tab--active {\n  color: var(--primary);\n}\n\n.profile__tab--active::after {\n  content: '';\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n  width: 100%;\n  height: 3px;\n  background: var(--primary);\n}\n</style>"],"version":3}